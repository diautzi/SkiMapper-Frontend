{"ast":null,"code":"var _jsxFileName = \"/Users/dia_utzi/Documents/SkiMapperFront/backcountry-sky-client/src/components/TrailDetails.js\";\nimport React, { Component } from \"react\";\nimport Profile from \"../components/Profile\";\nimport { NavLink } from 'react-router-dom';\nimport { Card, Icon, Rating, Grid, Form, Button, Segment, Input, Image } from \"semantic-ui-react\";\nimport MapContainer from \"../components/MapContainer\";\nimport { style } from \"../App.css\";\n\nclass TrailDetails extends Component {\n  constructor(props) {\n    super();\n\n    this.difficulty = () => {\n      let level;\n\n      if (this.state.trail.difficulty === \"blue\") {\n        level = \"Blue\";\n      } else if (this.state.trail.difficulty === \"greenBlue\") {\n        level = \"Intermediate Green\";\n      } else if (this.state.trail.difficulty === \"blueBlack\") {\n        level = \"Intermediate Blue\";\n      } else if (this.state.trail.difficulty === \"black\") {\n        level = \"Black 🔷\";\n      } else if (this.state.trail.difficulty === \"dblack\") {\n        level = \"Double Black 🔷\";\n      } else if (this.state.trail.difficulty === \"green\") {\n        level = \"Easy\";\n      } else {\n        level = \"N/A\";\n      }\n\n      return level;\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        content: e.target.value\n      });\n    };\n\n    this.addComment = comment => {\n      this.setState({\n        comments: [...this.state.comments, comment]\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (!!this.props.currentUser) {\n        fetch(\"http://localhost:3000/api/v1/comments\", {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"http://localhost:3000\"\n          },\n          body: JSON.stringify({\n            content: this.state.content,\n            trail_id: this.state.trail.id,\n            user_id: this.props.currentUser.id\n          })\n        }).then(resp => resp.json()).then(comment => this.addComment(comment)).then(this.setState({\n          content: \"\"\n        }));\n      } else {\n        alert('Please \"Log In\" to leave a comment!');\n        this.setState({\n          content: \"\"\n        });\n      }\n    };\n\n    this.addToFavorites = trail => {\n      this.setState({\n        myTrails: [...this.state.myTrails, trail]\n      });\n    };\n\n    this.addToFavoritesClick = e => {\n      e.preventDefault();\n      fetch(\"http://localhost:3000/api/v1/completed_trails\", {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\" // \"Access-Control-Allow-Origin\" :\"http://localhost:3000\"\n\n        },\n        body: JSON.stringify({\n          user_id: this.props.currentUser.id,\n          trail_id: this.state.trail.id,\n          trail_name: this.state.trail.name,\n          trail_length: this.state.trail.length,\n          trail_image: this.state.trail.imgMedium,\n          trail_difficulty: this.state.trail.difficulty\n        })\n      }).then(resp => resp.json()).then(json => this.addToFavorites(json));\n      this.setState({\n        buttonColor: \"#000000\"\n      });\n    };\n\n    this.state = {\n      trail: [],\n      comments: [],\n      content: \"\",\n      myTrails: [],\n      buttonColor: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/api/v1/trails/').then(response => response.json()).then(trailsData => this.setState({\n      trail: trailsData.trails.find(trail => trail.id == this.props.location.pathname.split('/')[2])\n    }));\n    fetch(\"http://localhost:3000/api/v1/comments\").then(resp => resp.json()).then(comments => this.setState({\n      comments: comments.filter(comment => comment.trail_id == this.state.trail.id)\n    }));\n  }\n\n  render() {\n    const trail = this.state.trail;\n    const showImage = !!trail.imgMedium ? trail.imgMedium : process.env.PUBLIC_URL + 'https://cdn.shopify.com/s/files/1/0231/7685/t/3/assets/no-image-available.png?2214404492633272863';\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      trail: trail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, trail.name), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \" Difficulty: \", this.difficulty(), \" \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"trail-details-image\",\n      alt: \"oh no!\",\n      src: showImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.props.currentUser ? React.createElement(React.Fragment, null, React.createElement(Button, {\n      onClick: this.addToFavoritesClick,\n      color: \"red\",\n      inverted: true,\n      icon: \"heart\",\n      content: \"Add to Your Completed Trails ..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(NavLink, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"red\",\n      inverted: true,\n      content: \"Explore some more trails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))) : React.createElement(NavLink, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"black\",\n      size: \"huge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Explore some more\")))), React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"\\\"\", trail.summary, \"\\\"\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"\\uD83C\\uDF0E Location: \", trail.location, \"  \"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Length: \", trail.length, \" Miles \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Descent \\u26F0\\uFE0F: \", trail.descent, \"' \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Rating: \", trail.stars, \" \", React.createElement(Rating, {\n      icon: \"star\",\n      defaultRating: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"conditions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Conditions:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \" \", trail.conditionStatus, \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \" \", trail.conditionDetails, \" \")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      placeholder: \"Leave a thought...\",\n      name: \"content\",\n      value: this.state.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"submit-btn\",\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), this.state.comments.length > 0 ? React.createElement(\"h2\", {\n      style: {\n        marginLeft: \"20px\",\n        fontColor: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Comments\") : \"\", React.createElement(\"div\", {\n      key: this.state.comments.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, this.state.comments.map(comment => React.createElement(Card, {\n      style: {\n        marginLeft: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, !!this.props.currentUser ? React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Image, {\n      floated: \"left\",\n      size: \"mini\",\n      src: this.props.currentUser.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, this.props.currentUser.name), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Posted at: \", comment.created_at.slice(11, 19), \" on  \", comment.created_at.slice(0, 10)), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, comment.content)) : React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Image, {\n      floated: \"left\",\n      size: \"mini\",\n      src: comment.user.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, comment.user.name), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Posted at: \", comment.created_at.slice(11, 19), \" on  \", comment.created_at.slice(0, 10)), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, comment.content)))))));\n  }\n\n}\n\nexport default TrailDetails;","map":{"version":3,"sources":["/Users/dia_utzi/Documents/SkiMapperFront/backcountry-sky-client/src/components/TrailDetails.js"],"names":["React","Component","Profile","NavLink","Card","Icon","Rating","Grid","Form","Button","Segment","Input","Image","MapContainer","style","TrailDetails","constructor","props","difficulty","level","state","trail","handleChange","e","setState","content","target","value","addComment","comment","comments","handleSubmit","preventDefault","currentUser","fetch","method","mode","headers","body","JSON","stringify","trail_id","id","user_id","then","resp","json","alert","addToFavorites","myTrails","addToFavoritesClick","trail_name","name","trail_length","length","trail_image","imgMedium","trail_difficulty","buttonColor","componentDidMount","response","trailsData","trails","find","location","pathname","split","filter","render","showImage","process","env","PUBLIC_URL","textAlign","summary","descent","stars","conditionStatus","conditionDetails","marginLeft","fontColor","map","image","created_at","slice","user"],"mappings":"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","sourcesContent":["\nimport React, {Component} from \"react\";\nimport Profile from \"../components/Profile\";\nimport { NavLink } from 'react-router-dom';\nimport {Card, Icon, Rating, Grid, Form, Button, Segment, Input, Image} from \"semantic-ui-react\"\nimport MapContainer from \"../components/MapContainer\"\nimport { style } from \"../App.css\"\n\nclass TrailDetails extends Component {\n  constructor(props) {\n    super();\n    this.state= {\n      trail:[],\n      comments:[],\n      content: \"\",\n      myTrails: [],\n      buttonColor: \"\"\n    }\n  }\n\n  difficulty = () => {\n    let level;\n    if (this.state.trail.difficulty === \"blue\") {\n      level = \"Blue\";\n    } else if (this.state.trail.difficulty === \"greenBlue\") {\n      level = \"Intermediate Green\";\n    } else if (this.state.trail.difficulty === \"blueBlack\") {\n      level = \"Intermediate Blue\";\n    } else if (this.state.trail.difficulty === \"black\") {\n      level = \"Black 🔷\";\n    } else if (this.state.trail.difficulty === \"dblack\") {\n      level = \"Double Black 🔷\";\n    } else if (this.state.trail.difficulty === \"green\") {\n      level = \"Easy\"\n    } else {\n      level = \"N/A\"\n    }\n    return level;\n  }\n\n\n  componentDidMount() {\n     fetch('http://localhost:3000/api/v1/trails/')\n       .then(response => response.json())\n       .then(trailsData => this.setState({\n         trail: trailsData.trails.find(trail => trail.id == this.props.location.pathname.split('/')[2])\n       }));\n\n       fetch(\"http://localhost:3000/api/v1/comments\")\n       .then(resp => resp.json())\n       .then(comments => this.setState({\n         comments: comments.filter(comment => comment.trail_id == this.state.trail.id)\n       }));\n   }\n\n\n  handleChange = (e) => {\n     this.setState({\n       content: e.target.value\n     })\n  }\n\n  addComment = (comment) => {\n     this.setState({\n       comments: [...this.state.comments, comment]\n     })\n  }\n\n  handleSubmit = (e) => {\n     e.preventDefault();\n     if ( !!this.props.currentUser ) {\n       fetch(\"http://localhost:3000/api/v1/comments\", {\n         method: \"POST\", mode: \"cors\",\n         headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Access-Control-Allow-Origin\" :\"http://localhost:3000\"\n          },\n          body: JSON.stringify({\n            content: this.state.content,\n            trail_id: this.state.trail.id,\n            user_id: this.props.currentUser.id\n            })\n          })\n          .then(resp => resp.json())\n          .then(comment => this.addComment(comment))\n          .then(this.setState({\n            content: \"\"\n        })\n       )\n     }\n     else {\n      alert('Please \"Log In\" to leave a comment!')\n      this.setState({\n        content: \"\"\n      })\n     }\n  }\n\n  addToFavorites = (trail) => {\n    this.setState({\n      myTrails: [...this.state.myTrails, trail]\n    })\n  }\n\n  addToFavoritesClick = (e) => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/api/v1/completed_trails\", {\n      method: \"POST\", mode: \"cors\",\n      headers: {\n         \"Content-Type\": \"application/json\",\n         \"Accept\": \"application/json\",\n         // \"Access-Control-Allow-Origin\" :\"http://localhost:3000\"\n       },\n       body: JSON.stringify({\n         user_id: this.props.currentUser.id,\n         trail_id: this.state.trail.id,\n         trail_name: this.state.trail.name,\n         trail_length: this.state.trail.length,\n         trail_image: this.state.trail.imgMedium,\n         trail_difficulty: this.state.trail.difficulty\n       })\n    })\n     .then(resp => resp.json())\n     .then(json => this.addToFavorites(json))\n      this.setState({\n       buttonColor: \"#000000\"\n     })\n  }\n\n\n  render(){\n    const trail = this.state.trail\n    const showImage = !!trail.imgMedium ? trail.imgMedium : process.env.PUBLIC_URL + 'https://cdn.shopify.com/s/files/1/0231/7685/t/3/assets/no-image-available.png?2214404492633272863';\n\n    return(\n       <div>\n          <div class= \"map\"><MapContainer trail={trail}/></div>\n          <div style={{textAlign: \"center\"}}>\n            <h1>{trail.name}</h1>\n            <strong> Difficulty: { this.difficulty() } </strong>\n          </div>\n          <div>\n            <img className=\"trail-details-image\" alt=\"oh no!\" src= { showImage } />\n            <div style={{textAlign: \"center\"}}>\n            <Segment>\n              { this.props.currentUser ?\n                <>\n                <Button\n                  onClick={this.addToFavoritesClick}\n                  color=\"red\"\n                  inverted\n                  icon=\"heart\"\n                  content='Add to Your Completed Trails ..'\n                />\n                <NavLink to=\"/home\">\n                 <Button\n                   color=\"red\"\n                   inverted\n                   content='Explore some more trails'\n                    />\n                </NavLink>\n                </>\n                :\n                <NavLink to=\"/home\">\n                 <Button\n                    color=\"black\"\n                    size='huge'>\n                      Explore some more\n                  </Button>\n                </NavLink>\n              }\n            </Segment>\n          </div>\n          <div style={{textAlign: \"center\"}}>\n            <h2><blockquote>\"{trail.summary}\"</blockquote></h2>\n            <h2>🌎 Location: {trail.location}  </h2>\n            <h3>Length: {trail.length} Miles </h3><br></br>\n            <h3>Descent ⛰️: {trail.descent}' </h3><br></br>\n            <h4>Rating: {trail.stars} <Rating icon='star' defaultRating={5}/></h4>\n          </div>\n          <div class=\"conditions\">\n            <h3 >Conditions:</h3>\n              <p> {trail.conditionStatus} </p>\n              <p> {trail.conditionDetails} </p>\n          </div>\n          <br></br>\n          <div class=\"comments\">\n            <Form onSubmit={this.handleSubmit} >\n              <input onChange={this.handleChange} type=\"text\" placeholder='Leave a thought...' name='content' value={this.state.content}/>\n              <Button className=\"submit-btn\"\n                color=\"red\">\n                Submit\n              </Button>\n            </Form>\n          </div>\n          <br></br>\n          <br></br>\n\n          {this.state.comments.length >0 ? <h2 style={{marginLeft: \"20px\", fontColor: \"red\"}}>Comments</h2> : \"\"}\n          <div key={this.state.comments.id}>\n            {this.state.comments.map(comment =>\n              <Card style={{marginLeft: \"40px\"}}>\n                {!!this.props.currentUser ? <Card.Content >\n                  <Image floated='left' size='mini' src={this.props.currentUser.image} />\n                  <Card.Header>{this.props.currentUser.name}</Card.Header>\n                  <Card.Meta>Posted at: {comment.created_at.slice(11, 19)} on  {comment.created_at.slice(0, 10)}</Card.Meta>\n                  <Card.Description>\n                    {comment.content}\n                  </Card.Description>\n                </Card.Content>\n                :\n                <Card.Content >\n                  <Image floated='left' size='mini' src={comment.user.image} />\n                  <Card.Header>{comment.user.name}</Card.Header>\n                  <Card.Meta>Posted at: {comment.created_at.slice(11, 19)} on  {comment.created_at.slice(0, 10)}</Card.Meta>\n                  <Card.Description>\n                    {comment.content}\n                  </Card.Description>\n                </Card.Content>\n              }\n\n              </Card>\n            )}\n            </div>\n          </div>\n        </div>\n     )\n  }\n\n}\n\n\nexport default TrailDetails;\n"]},"metadata":{},"sourceType":"module"}