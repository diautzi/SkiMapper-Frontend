{"ast":null,"code":"var _jsxFileName = \"/Users/dia_utzi/Documents/Development/finalProject/backcountry_sky_mapper/frontend/backcountry-sky-client/src/components/Profile.js\";\nimport React, { Component } from \"react\";\nimport style from \"../App.css\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport TrailDetails from \"../components/TrailDetails\";\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      myTrails: []\n    };\n\n    this.createdAt = date => {\n      let d = new Date(date);\n      let monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      let day = d.getDate();\n      let monthIndex = d.getMonth();\n      let year = d.getFullYear();\n      return day + ' ' + monthNames[monthIndex] + ' ' + year;\n    };\n\n    this.deleteAccount = userId => {\n      let id = userId;\n      id = \"\".concat(this.props.currentUser.id);\n      console.log(id);\n      fetch(\"http://localhost:3000/api/v1/users/\".concat(id), {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': \"application/json\",\n          'Accept': \"application/json\"\n        },\n        body: JSON.stringify({\n          id: id\n        })\n      }).then(resp => resp.json()).then(data => this.props.logout(data));\n      this.props.history.push(\"/login\");\n    };\n\n    this.displayFavoriteTrail = () => {\n      {\n        this.state.myTrails.map(data => React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: data.trail_image,\n          wrapped: true,\n          ui: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), React.createElement(Card.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"data.name\"), React.createElement(Card.Meta, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Joined in 2016\"), React.createElement(Card.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Daniel is a comedian living in Nashville.\"))));\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/api/v1/completed_trails\").then(resp => resp.json()).then(favTrails => this.setState({\n      myTrails: favTrails.filter(trail => trail.user_id == this.props.currentUser.id)\n    }));\n  }\n\n  render() {\n    console.log(this.props.currentUser);\n    console.log(this.state.myTrails);\n    const currentUser = this.props.currentUser;\n    let userImage;\n\n    if (!!currentUser.image) {\n      userImage = currentUser.image;\n    } else {\n      userImage = process.env.PUBLIC_URL + '/images/no_image.png';\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"profile-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"profile-pic\",\n      src: userImage,\n      alt: \"Add-a-profile-pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"user-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, currentUser.name), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"user-location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \" \\uD83C\\uDF0E \", currentUser.location, \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"user-registration-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Member since: \", this.createdAt(currentUser.created_at)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: e => this.deleteAccount(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" Delete account \"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"My favorite Trails\"), React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.displayFavoriteTrail()))));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/dia_utzi/Documents/Development/finalProject/backcountry_sky_mapper/frontend/backcountry-sky-client/src/components/Profile.js"],"names":["React","Component","style","Button","Card","Image","TrailDetails","Profile","state","myTrails","createdAt","date","d","Date","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear","deleteAccount","userId","id","props","currentUser","console","log","fetch","method","headers","body","JSON","stringify","then","resp","json","data","logout","history","push","displayFavoriteTrail","map","trail_image","componentDidMount","favTrails","setState","filter","trail","user_id","render","userImage","image","process","env","PUBLIC_URL","textAlign","name","location","created_at","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport style from \"../App.css\";\nimport { Button, Card, Image } from \"semantic-ui-react\"\nimport TrailDetails from \"../components/TrailDetails\"\n\nclass Profile extends Component {\n\n  state = {\n    myTrails: []\n  }\n\n  createdAt = (date) => {\n   let d = new Date(date)\n   let monthNames = [\n     \"Jan\", \"Feb\", \"Mar\",\n     \"Apr\", \"May\", \"Jun\", \"Jul\",\n     \"Aug\", \"Sep\", \"Oct\",\n     \"Nov\", \"Dec\"\n   ];\n\n   let day = d.getDate();\n   let monthIndex = d.getMonth();\n   let year = d.getFullYear();\n\n   return day + ' ' + monthNames[monthIndex] + ' ' + year;\n }\ncomponentDidMount() {\n  fetch(\"http://localhost:3000/api/v1/completed_trails\")\n  .then(resp => resp.json())\n  .then(favTrails => this.setState({\n    myTrails: favTrails.filter(trail => trail.user_id == this.props.currentUser.id)\n  }))\n}\n\n\n  deleteAccount = (userId) => {\n    let id = userId\n    id = `${this.props.currentUser.id}`\n    console.log(id)\n    fetch(`http://localhost:3000/api/v1/users/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': \"application/json\",\n        'Accept': \"application/json\"\n      },\n      body: JSON.stringify({\n        id: id\n        })\n      })\n    .then(resp => resp.json())\n    .then(data => this.props.logout(data))\n    this.props.history.push(\"/login\")\n  }\n\n  displayFavoriteTrail = () => {\n    {this.state.myTrails.map(data =>\n      <Card>\n        <Image src={data.trail_image} wrapped ui={false} />\n        <Card.Content>\n          <Card.Header>data.name</Card.Header>\n          <Card.Meta>Joined in 2016</Card.Meta>\n          <Card.Description>\n            Daniel is a comedian living in Nashville.\n          </Card.Description>\n        </Card.Content>\n      </Card>\n    )}\n  }\n\n\n  render() {\n    console.log(this.props.currentUser)\n    console.log(this.state.myTrails)\n   const currentUser = this.props.currentUser;\n\n    let userImage;\n    if (!!currentUser.image) {\n      userImage = currentUser.image;\n    } else {\n      userImage = process.env.PUBLIC_URL + '/images/no_image.png';\n    }\n    return (\n      <div style={{textAlign: \"center\"}}>\n        <div className='profile-container'>\n          <img className=\"profile-pic\" src={ userImage } alt=\"Add-a-profile-pic\" />\n          <div className='user-data'>\n            <div className=\"name\">{currentUser.name}</div><br></br>\n            <div className=\"user-location\" > 🌎 { currentUser.location } </div><br></br>\n            <div className=\"user-registration-date\">Member since: { this.createdAt(currentUser.created_at) }</div>\n            <br></br>\n            <Button onClick={(e) => this.deleteAccount(e)}> Delete account </Button>\n            <h3>My favorite Trails</h3>\n            <Card.Group>\n             {this.displayFavoriteTrail()}\n            </Card.Group>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}