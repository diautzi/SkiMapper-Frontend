{"ast":null,"code":"var _jsxFileName = \"/Users/dia_utzi/Documents/Development/finalProject/backcountry_sky_mapper/frontend/backcountry-sky-client/src/containers/MainContainer.js\";\nimport React, { Component } from \"react\";\nimport HomeScreen from \"../components/HomeScreen\";\nimport { Router, Route, Link, Switch, NavLink } from 'react-router-dom';\nimport About from \"../components/TrailCard\";\nimport Login from \"../containers/Login\";\nimport TrailsList from \"../containers/TrailsList\";\nimport { Search, Segment } from \"semantic-ui-react\";\nimport TrailDetails from \"../components/TrailDetails\";\n\nclass MainContainer extends Component {\n  constructor() {\n    super();\n\n    this.getSearchInput = (e, {\n      value\n    }) => {\n      this.setState({\n        search: value\n      });\n    };\n\n    this.handleClick = e => {\n      this.setState({\n        display: false\n      });\n    };\n\n    this.goBack = () => {\n      console.log(\"clicked\");\n    };\n\n    this.desiredTrails = () => {\n      let tempTrails = [...this.state.trails];\n      let filteredTrails = tempTrails.filter(trail => {\n        if (trail.name.toLowerCase().includes(this.state.search)) {\n          return trail;\n        } else if (trail.location.toLowerCase().includes(this.state.search)) {\n          return trail;\n        } else if (trail.difficulty.includes(this.state.search)) {\n          return trail;\n        }\n      });\n      return filteredTrails;\n    };\n\n    this.getId = trail => {\n      console.log(trail);\n      this.setState({\n        current_trail: trail\n      });\n    };\n\n    this.renderTrailDetails = trailId => {};\n\n    this.state = {\n      trails: [],\n      search: \"\",\n      current_user: \"\",\n      current_trail: \"\",\n      display: true\n    };\n    this.server = \"http://localhost:3000/api/v1/\";\n  }\n\n  componentDidMount() {\n    fetch(this.server + \"trails\").then(resp => resp.json()).then(data => this.setState({\n      trails: data.trails\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"I am Main container\", React.createElement(Segment, {\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Search, {\n      onSearchChange: this.getSearchInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.display ? React.createElement(TrailsList, {\n      trails: this.desiredTrails(),\n      getId: this.getId,\n      currentTrail: this.state.current_trail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }) : React.createElement(TrailDetails, {\n      trail: this.state.current_trail,\n      goBack: this.goBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MainContainer;","map":{"version":3,"sources":["/Users/dia_utzi/Documents/Development/finalProject/backcountry_sky_mapper/frontend/backcountry-sky-client/src/containers/MainContainer.js"],"names":["React","Component","HomeScreen","Router","Route","Link","Switch","NavLink","About","Login","TrailsList","Search","Segment","TrailDetails","MainContainer","constructor","getSearchInput","e","value","setState","search","handleClick","display","goBack","console","log","desiredTrails","tempTrails","state","trails","filteredTrails","filter","trail","name","toLowerCase","includes","location","difficulty","getId","current_trail","renderTrailDetails","trailId","current_user","server","componentDidMount","fetch","then","resp","json","data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqCC,OAArC,QAAoD,kBAApD;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,mBAAhC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAGA,MAAMC,aAAN,SAA4Bb,SAA5B,CAAsC;AACpCc,EAAAA,WAAW,GAAG;AACZ;;AADY,SAYdC,cAZc,GAYG,CAACC,CAAD,EAAI;AAACC,MAAAA;AAAD,KAAJ,KAAiB;AAChC,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAEF;AADI,OAAd;AAGD,KAhBa;;AAAA,SAkBdG,WAlBc,GAkBCJ,CAAD,IAAO;AACnB,WAAKE,QAAL,CAAc;AACZG,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAtBa;;AAAA,SAyBdC,MAzBc,GAyBL,MAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KA3Ba;;AAAA,SAsCdC,aAtCc,GAsCE,MAAM;AACnB,UAAIC,UAAU,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAf,CAAjB;AACA,UAAIC,cAAc,GAAGH,UAAU,CAACI,MAAX,CAAkBC,KAAK,IAAI;AAC9C,YAAIA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,KAAKP,KAAL,CAAWR,MAA7C,CAAJ,EAA0D;AACxD,iBAAOY,KAAP;AACD,SAFD,MAGK,IAAIA,KAAK,CAACI,QAAN,CAAeF,WAAf,GAA6BC,QAA7B,CAAsC,KAAKP,KAAL,CAAWR,MAAjD,CAAJ,EAA6D;AAChE,iBAAOY,KAAP;AACD,SAFI,MAGA,IAAIA,KAAK,CAACK,UAAN,CAAiBF,QAAjB,CAA0B,KAAKP,KAAL,CAAWR,MAArC,CAAJ,EAAiD;AACpD,iBAAOY,KAAP;AACD;AACF,OAVoB,CAArB;AAWA,aAAOF,cAAP;AACD,KApDY;;AAAA,SAsDbQ,KAtDa,GAsDJN,KAAD,IAAW;AAClBR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACA,WAAKb,QAAL,CAAc;AACZoB,QAAAA,aAAa,EAAEP;AADH,OAAd;AAGA,KA3DY;;AAAA,SA6DbQ,kBA7Da,GA6DSC,OAAD,IAAa,CAEjC,CA/DY;;AAEZ,SAAKb,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXT,MAAAA,MAAM,EAAE,EAFG;AAGXsB,MAAAA,YAAY,EAAE,EAHH;AAIXH,MAAAA,aAAa,EAAE,EAJJ;AAKXjB,MAAAA,OAAO,EAAE;AALE,KAAb;AAOA,SAAKqB,MAAL,GAAc,+BAAd;AACD;;AAmBAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,KAAKF,MAAL,GAAc,QAAf,CAAL,CACCG,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAK9B,QAAL,CAAc;AAC1BU,MAAAA,MAAM,EAAEoB,IAAI,CAACpB;AADa,KAAd,CAFd;AAMD;;AA6BFqB,EAAAA,MAAM,GAAG;AACP,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACE,oBAAC,OAAD;AAAS,MAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,cAAc,EAAE,KAAKlC,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIC;AAAK,MAAA,OAAO,EAAE,KAAKK,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKO,KAAL,CAAWN,OAAX,GACA,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE,KAAKI,aAAL,EAApB;AAA0C,MAAA,KAAK,EAAE,KAAKY,KAAtD;AAA6D,MAAA,YAAY,EAAE,KAAKV,KAAL,CAAWW,aAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAGA,oBAAE,YAAF;AAAe,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWW,aAAjC;AAAgD,MAAA,MAAM,EAAE,KAAKhB,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,CAJD,CADA;AAeD;;AAlFmC;;AAoFtC,eAAeT,aAAf","sourcesContent":["import React, { Component } from \"react\"\nimport HomeScreen from \"../components/HomeScreen\"\nimport {Router, Route, Link, Switch, NavLink } from 'react-router-dom';\nimport About from \"../components/TrailCard\"\nimport Login from \"../containers/Login\"\nimport TrailsList from \"../containers/TrailsList\"\nimport { Search, Segment } from \"semantic-ui-react\"\nimport TrailDetails from \"../components/TrailDetails\"\n\n\nclass MainContainer extends Component {\n  constructor() {\n    super()\n    this.state = {\n      trails: [],\n      search: \"\",\n      current_user: \"\",\n      current_trail: \"\",\n      display: true\n    }\n    this.server = \"http://localhost:3000/api/v1/\"\n  }\n\n  getSearchInput = (e, {value} ) => {\n    this.setState({\n      search: value\n    })\n  }\n\n  handleClick = (e) => {\n    this.setState({\n      display: false\n    })\n  }\n\n\n  goBack = () => {\n    console.log(\"clicked\")\n  }\n\n   componentDidMount() {\n     fetch(this.server + \"trails\")\n     .then(resp => resp.json())\n     .then(data => this.setState({\n       trails: data.trails\n     })\n    )\n   }\n\n  desiredTrails = () => {\n     let tempTrails = [...this.state.trails]\n     let filteredTrails = tempTrails.filter(trail => {\n       if (trail.name.toLowerCase().includes(this.state.search)) {\n         return trail\n       }\n       else if (trail.location.toLowerCase().includes(this.state.search)){\n         return trail\n       }\n       else if (trail.difficulty.includes(this.state.search)){\n         return trail\n       }\n     })\n     return filteredTrails\n   }\n\n   getId = (trail) => {\n    console.log(trail)\n    this.setState({\n      current_trail: trail\n    })\n   }\n\n   renderTrailDetails = (trailId) => {\n\n   }\n\n  render() {\n    return(\n    <div >I am Main container\n      <Segment centered>\n        <Search onSearchChange={this.getSearchInput} />\n      </Segment>\n     <div onClick={this.handleClick} >\n      {\n        this.state.display ?\n        <TrailsList trails={this.desiredTrails()} getId={this.getId} currentTrail={this.state.current_trail}/>\n        :\n        < TrailDetails trail={this.state.current_trail} goBack={this.goBack}/>\n      }\n     </div>\n    </div>\n    )\n  }\n}\nexport default MainContainer;\n"]},"metadata":{},"sourceType":"module"}