{"ast":null,"code":"var _jsxFileName = \"/Users/dia_utzi/Documents/Development/finalProject/backcountry_sky_mapper/frontend/backcountry-sky-client/src/components/TrailDetails.js\";\nimport React, { Component } from \"react\";\nimport Profile from \"../components/Profile\";\nimport { NavLink } from 'react-router-dom';\nimport { Card, Icon, Rating, Grid, Form, Button, Image, Input } from \"semantic-ui-react\";\n\nclass TrailDetails extends Component {\n  constructor(props) {\n    super();\n\n    this.difficulty = () => {\n      let level;\n\n      if (hike.difficulty === \"blue\") {\n        level = \"Intermediate\";\n      } else if (hike.difficulty === \"greenBlue\") {\n        level = \"Easy/Intermediate\";\n      } else if (hike.difficulty === \"blueBlack\") {\n        level = \"Intermediate/Hard\";\n      } else if (hike.difficulty === \"black\") {\n        level = \"Hard\";\n      } else if (hike.difficulty === \"green\") {\n        level = \"Easy\";\n      } else {\n        level = \"N/A\";\n      }\n\n      return level;\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        content: e.target.value\n      });\n    };\n\n    this.addComment = comment => {\n      this.setState({\n        comments: [...this.state.comments, comment]\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (!!this.props.currentUser) {\n        fetch(\"http://localhost:3000/api/v1/comments\", {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"http://localhost:3000\"\n          },\n          body: JSON.stringify({\n            content: this.state.content,\n            trail_id: this.state.trail.id,\n            user_id: this.props.currentUser.id\n          })\n        }).then(resp => resp.json()).then(comment => this.addComment(comment)).then(this.setState({\n          content: \"\"\n        }));\n      } else {\n        alert('Please \"Log In\" to leave a comment!');\n        this.setState({\n          content: \"\"\n        });\n      }\n    };\n\n    this.addToFavorites = trail => {\n      this.setState({\n        myTrails: [...this.state.myTrails, trail]\n      });\n    };\n\n    this.addToFavoritesClick = e => {\n      e.preventDefault();\n      fetch(\"http://localhost:3000/api/v1/completed_trails\", {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\" // \"Access-Control-Allow-Origin\" :\"http://localhost:3000\"\n\n        },\n        body: JSON.stringify({\n          user_id: this.props.currentUser.id,\n          trail_id: this.state.trail.id,\n          trail_name: this.state.trail.name,\n          trail_length: this.state.trail.length,\n          trail_image: this.state.trail.imgMedium,\n          trail_difficulty: this.state.trail.difficulty\n        })\n      }).then(resp => resp.json()).then(json => this.addToFavorites(json));\n      this.setState({\n        buttonColor: \"#000000\"\n      });\n    };\n\n    this.state = {\n      trail: [],\n      comments: [],\n      content: \"\",\n      myTrails: [],\n      buttonColor: '#979797'\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/api/v1/trails/').then(response => response.json()).then(trailsData => this.setState({\n      trail: trailsData.trails.find(trail => trail.id == this.props.location.pathname.split('/')[2])\n    }));\n    fetch(\"http://localhost:3000/api/v1/comments\").then(resp => resp.json()).then(comments => this.setState({\n      comments: comments.filter(comment => comment.trail_id == this.state.trail.id)\n    }));\n  }\n\n  render() {\n    console.log(this.state.content);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.trail.name), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"  Difficulty: \", this.difficulty(), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), \" \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        borderRadius: \"8px\",\n        height: \"40%\",\n        width: \"60%\",\n        marginLeft: \"25px\"\n      },\n      alt: \"oh no!\",\n      src: this.state.trail.imgMedium,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.props.currentUser ? React.createElement(React.Fragment, null, React.createElement(Button, {\n      onClick: this.addToFavoritesClick,\n      color: this.state.buttonColor,\n      content: \"Add it to your bucket list ..\",\n      icon: \"heart\",\n      label: {\n        basic: true,\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(NavLink, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Explore some more trails\"))) : React.createElement(NavLink, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Explore some more\"))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"blockquote\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"\\\"\", this.state.trail.summary, \"\\\"\")), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Location: \", this.state.trail.location, \"  \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Length: \", this.state.trail.length, \" miles \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), \"\\u26F0\\uFE0F Ascent: \", this.state.trail.ascent, \" |  Descent: \", this.state.trail.descent, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Rating:\", this.state.trail.stars, \" \", React.createElement(Rating, {\n      icon: \"star\",\n      defaultRating: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      class: \"conditions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Conditions:\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \" \", this.state.trail.conditionStatus, \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \" \", this.state.trail.conditionDetails, \" \")), React.createElement(\"div\", {\n      class: \"comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      onChange: this.handleChange,\n      type: \"text\",\n      placeholder: \"Leave a thought...\",\n      name: \"content\",\n      value: this.state.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(Form.Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(\"div\", {\n      key: this.state.comments.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.comments.map(comment => React.createElement(Card, {\n      style: {\n        marginLeft: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, !!this.props.currentUser, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Image, {\n      floated: \"left\",\n      size: \"mini\",\n      src: this.props.currentUser.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, this.props.currentUser.name), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Posted at: \", comment.created_at.slice(11, 19), \" on  \", comment.created_at.slice(0, 10)), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, comment.content)))))));\n  }\n\n}\n\nexport default TrailDetails;","map":{"version":3,"sources":["/Users/dia_utzi/Documents/Development/finalProject/backcountry_sky_mapper/frontend/backcountry-sky-client/src/components/TrailDetails.js"],"names":["React","Component","Profile","NavLink","Card","Icon","Rating","Grid","Form","Button","Image","Input","TrailDetails","constructor","props","difficulty","level","hike","handleChange","e","setState","content","target","value","addComment","comment","comments","state","handleSubmit","preventDefault","currentUser","fetch","method","mode","headers","body","JSON","stringify","trail_id","trail","id","user_id","then","resp","json","alert","addToFavorites","myTrails","addToFavoritesClick","trail_name","name","trail_length","length","trail_image","imgMedium","trail_difficulty","buttonColor","componentDidMount","response","trailsData","trails","find","location","pathname","split","filter","render","console","log","textAlign","borderRadius","height","width","marginLeft","basic","color","summary","ascent","descent","stars","conditionStatus","conditionDetails","map","image","created_at","slice"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport Profile from \"../components/Profile\";\nimport { NavLink } from 'react-router-dom';\nimport {Card, Icon, Rating, Grid, Form, Button, Image, Input} from \"semantic-ui-react\"\n\n\nclass TrailDetails extends Component {\n  constructor(props) {\n    super();\n    this.state= {\n      trail:[],\n      comments:[],\n      content: \"\",\n      myTrails: [],\n      buttonColor: '#979797'\n    }\n  }\n\n  difficulty = () => {\n    let level;\n    if (hike.difficulty === \"blue\") {\n      level = \"Intermediate\";\n    } else if (hike.difficulty === \"greenBlue\") {\n      level = \"Easy/Intermediate\";\n    } else if (hike.difficulty === \"blueBlack\") {\n      level = \"Intermediate/Hard\";\n    } else if (hike.difficulty === \"black\") {\n      level = \"Hard\"\n    } else if (hike.difficulty === \"green\") {\n      level = \"Easy\"\n    } else {\n      level = \"N/A\"\n    }\n    return level;\n  }\n\n\n  componentDidMount() {\n     fetch('http://localhost:3000/api/v1/trails/')\n       .then(response => response.json())\n       .then(trailsData => this.setState({\n         trail: trailsData.trails.find(trail => trail.id == this.props.location.pathname.split('/')[2])\n       }));\n\n       fetch(\"http://localhost:3000/api/v1/comments\")\n       .then(resp => resp.json())\n       .then(comments => this.setState({\n         comments: comments.filter(comment => comment.trail_id == this.state.trail.id)\n       }));\n   }\n\n\n  handleChange = (e) => {\n     this.setState({\n       content: e.target.value\n     })\n  }\n\n  addComment = (comment) => {\n     this.setState({\n       comments: [...this.state.comments, comment]\n     })\n  }\n\n  handleSubmit = (e) => {\n     e.preventDefault();\n     if ( !!this.props.currentUser ) {\n       fetch(\"http://localhost:3000/api/v1/comments\", {\n         method: \"POST\", mode: \"cors\",\n         headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n            \"Access-Control-Allow-Origin\" :\"http://localhost:3000\"\n          },\n          body: JSON.stringify({\n            content: this.state.content,\n            trail_id: this.state.trail.id,\n            user_id: this.props.currentUser.id\n            })\n          })\n          .then(resp => resp.json())\n          .then(comment => this.addComment(comment))\n          .then(this.setState({\n            content: \"\"\n        })\n       )\n     }\n     else {\n      alert('Please \"Log In\" to leave a comment!')\n      this.setState({\n        content: \"\"\n      })\n     }\n  }\n\n  addToFavorites = (trail) => {\n    this.setState({\n      myTrails: [...this.state.myTrails, trail]\n    })\n  }\n\n  addToFavoritesClick = (e) => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/api/v1/completed_trails\", {\n      method: \"POST\", mode: \"cors\",\n      headers: {\n         \"Content-Type\": \"application/json\",\n         \"Accept\": \"application/json\",\n         // \"Access-Control-Allow-Origin\" :\"http://localhost:3000\"\n       },\n       body: JSON.stringify({\n         user_id: this.props.currentUser.id,\n         trail_id: this.state.trail.id,\n         trail_name: this.state.trail.name,\n         trail_length: this.state.trail.length,\n         trail_image: this.state.trail.imgMedium,\n         trail_difficulty: this.state.trail.difficulty\n       })\n    })\n     .then(resp => resp.json())\n     .then(json => this.addToFavorites(json))\n      this.setState({\n       buttonColor: \"#000000\"\n     })\n  }\n\n\n  render(){\n    console.log(this.state.content)\n    return(\n       <div>\n         <div style={{textAlign: \"center\"}}>\n\n           <div>\n              <h2>{this.state.trail.name}</h2>\n              <strong>  Difficulty: {this.difficulty()} <br></br> </strong>\n           </div>\n           <div>\n              <img style={{ borderRadius : \"8px\", height: \"40%\", width: \"60%\", marginLeft: \"25px\"}} alt=\"oh no!\" src= {this.state.trail.imgMedium} />\n              <div>\n              { this.props.currentUser ?\n                <>\n                <Button\n                  onClick={this.addToFavoritesClick}\n                  color={this.state.buttonColor}\n                  content='Add it to your bucket list ..'\n                  icon='heart'\n                  label={{ basic: true, color: 'red'}}\n                />\n                <NavLink to=\"/home\">\n                 <Button color=\"red\" >Explore some more trails</Button>\n                </NavLink>\n                </>\n                :\n                <NavLink to=\"/home\">\n                 <Button color=\"red\" >Explore some more</Button>\n                </NavLink>\n              }\n\n              </div>\n              <h2><blockquote>\"{this.state.trail.summary}\"</blockquote></h2>\n              <h3>Location: {this.state.trail.location}  </h3>\n              <div>\n                <h3>\n                  Length: {this.state.trail.length} miles <br></br>\n                  ⛰️ Ascent: {this.state.trail.ascent} |  Descent: {this.state.trail.descent} <br></br>\n                </h3>\n              </div>\n              <div>\n                 <h4>Rating:\n                    {this.state.trail.stars} <Rating icon='star' defaultRating={5}/>\n                 </h4>\n              </div>\n            </div>\n            <div class=\"conditions\">\n              <h4>Conditions:</h4>\n                  <p> {this.state.trail.conditionStatus} </p>\n                  <p> {this.state.trail.conditionDetails} </p>\n            </div>\n            <div class=\"comments\">\n            <Form onSubmit={this.handleSubmit} >\n                <Form.Input onChange={this.handleChange} type=\"text\" placeholder='Leave a thought...' name='content' value={this.state.content}/>\n                <Form.Button>Submit</Form.Button>\n            </Form>\n            </div>\n            <h2>Comments</h2>\n            <div key={this.state.comments.id}>\n            {this.state.comments.map(comment =>\n              <Card style={{marginLeft: \"40px\"}}>\n                {!!this.props.currentUser}\n                <Card.Content >\n                  <Image floated='left' size='mini' src={this.props.currentUser.image} />\n                  <Card.Header>{this.props.currentUser.name}</Card.Header>\n                  <Card.Meta>Posted at: {comment.created_at.slice(11, 19)} on  {comment.created_at.slice(0, 10)}</Card.Meta>\n                  <Card.Description>\n                    {comment.content}\n                  </Card.Description>\n                </Card.Content>\n              </Card>\n            )}\n            </div>\n         </div>\n        </div>\n     )\n  }\n\n}\n\n\nexport default TrailDetails;\n"]},"metadata":{},"sourceType":"module"}