{"ast":null,"code":"var _jsxFileName = \"/Users/dia_utzi/Documents/Development/finalProject/frontend/backcountry-sky-client/src/components/Profile.js\";\nimport React, { Component } from \"react\";\nimport style from \"../App.css\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport TrailDetails from \"../components/TrailDetails\";\nimport { NavLink } from 'react-router-dom';\nimport UpdateProfile from \"../containers/UpdateProfile\";\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      myTrails: []\n    };\n\n    this.createdAt = date => {\n      let d = new Date(date);\n      let monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      let day = d.getDate();\n      let monthIndex = d.getMonth();\n      let year = d.getFullYear();\n      return day + ' ' + monthNames[monthIndex] + ' ' + year;\n    };\n\n    this.deleteAccount = userId => {\n      let id = userId;\n      id = \"\".concat(this.props.currentUser.id);\n      console.log(id);\n      fetch(\"http://localhost:3000/api/v1/users/\".concat(id), {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': \"application/json\",\n          'Accept': \"application/json\"\n        },\n        body: JSON.stringify({\n          id: id\n        })\n      }).then(resp => resp.json()).then(data => this.props.logout(data));\n      this.props.history.push(\"/login\");\n    };\n\n    this.deleteTrail = id => {\n      fetch(\"http://localhost:3000/api/v1/completed_trails/\".concat(id), {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': \"application/json\",\n          'Accept': \"application/json\"\n        },\n        body: JSON.stringify({\n          id: id\n        })\n      }).then(resp => resp.json()).then(console.log);\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/api/v1/completed_trails\").then(resp => resp.json()).then(favTrails => this.setState({\n      myTrails: favTrails.filter(trail => trail.user_id == this.props.currentUser.id)\n    }));\n  }\n\n  render() {\n    const currentUser = this.props.currentUser;\n    let userImage;\n\n    if (!!currentUser.image) {\n      userImage = currentUser.image;\n    } else {\n      userImage = process.env.PUBLIC_URL + '/images/no_image.png';\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"profile-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"profile-pic\",\n      src: userImage,\n      alt: \"Add-a-profile-pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"user-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, currentUser.name), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"user-location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" \\uD83C\\uDF0E \", currentUser.location, \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"user-registration-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Member since: \", this.createdAt(currentUser.created_at)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Card.Content, {\n      extra: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: \"/edit\",\n      exact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"large\",\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Update Account\")), React.createElement(Button, {\n      size: \"large\",\n      color: \"red\",\n      onClick: e => this.deleteAccount(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Delete Account\"))), this.state.myTrails.length > 0 ? React.createElement(\"h3\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"My favorite Trails\") : \"\"))), this.state.myTrails.map(data => React.createElement(\"div\", {\n      class: \"ui centered card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Card, {\n      image: data.trail_image,\n      header: data.trail_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Button, {\n      inverted: true,\n      onClick: e => this.deleteTrail(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" Delete \"))));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/dia_utzi/Documents/Development/finalProject/frontend/backcountry-sky-client/src/components/Profile.js"],"names":["React","Component","style","Button","Card","Image","TrailDetails","NavLink","UpdateProfile","Profile","state","myTrails","createdAt","date","d","Date","monthNames","day","getDate","monthIndex","getMonth","year","getFullYear","deleteAccount","userId","id","props","currentUser","console","log","fetch","method","headers","body","JSON","stringify","then","resp","json","data","logout","history","push","deleteTrail","componentDidMount","favTrails","setState","filter","trail","user_id","render","userImage","image","process","env","PUBLIC_URL","textAlign","name","location","created_at","e","length","map","trail_image","trail_name"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport style from \"../App.css\";\nimport { Button, Card, Image } from \"semantic-ui-react\"\nimport TrailDetails from \"../components/TrailDetails\"\nimport { NavLink } from 'react-router-dom';\nimport UpdateProfile from \"../containers/UpdateProfile\"\n\nclass Profile extends Component {\n\n  state = {\n    myTrails: []\n  }\n\n  createdAt = (date) => {\n   let d = new Date(date)\n   let monthNames = [\n     \"Jan\", \"Feb\", \"Mar\",\n     \"Apr\", \"May\", \"Jun\", \"Jul\",\n     \"Aug\", \"Sep\", \"Oct\",\n     \"Nov\", \"Dec\"\n   ];\n\n   let day = d.getDate();\n   let monthIndex = d.getMonth();\n   let year = d.getFullYear();\n\n   return day + ' ' + monthNames[monthIndex] + ' ' + year;\n }\n\ncomponentDidMount() {\n  fetch(\"http://localhost:3000/api/v1/completed_trails\")\n  .then(resp => resp.json())\n  .then(favTrails => this.setState({\n    myTrails: favTrails.filter(trail => trail.user_id == this.props.currentUser.id)\n  }))\n}\n\n\n  deleteAccount = (userId) => {\n    let id = userId\n    id = `${this.props.currentUser.id}`\n    console.log(id)\n    fetch(`http://localhost:3000/api/v1/users/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': \"application/json\",\n        'Accept': \"application/json\"\n      },\n      body: JSON.stringify({\n        id: id\n        })\n      })\n    .then(resp => resp.json())\n    .then(data => this.props.logout(data))\n    this.props.history.push(\"/login\")\n  }\n\n  deleteTrail = (id) => {\n    fetch(`http://localhost:3000/api/v1/completed_trails/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': \"application/json\",\n        'Accept': \"application/json\"\n      },\n      body: JSON.stringify({\n        id: id\n        })\n      })\n      .then(resp => resp.json())\n      .then(console.log)\n  }\n\n\n  render() {\n   const currentUser = this.props.currentUser;\n\n    let userImage;\n    if (!!currentUser.image) {\n      userImage = currentUser.image;\n    } else {\n      userImage = process.env.PUBLIC_URL + '/images/no_image.png';\n    }\n    return (\n      <div>\n        <div style={{textAlign: \"center\"}}>\n          <div className='profile-container'>\n            <img className=\"profile-pic\" src={ userImage } alt=\"Add-a-profile-pic\" />\n            <div className='user-data'>\n              <div className=\"name\">{currentUser.name}</div><br></br>\n              <div className=\"user-location\" > 🌎 { currentUser.location } </div><br></br>\n              <div className=\"user-registration-date\">Member since: { this.createdAt(currentUser.created_at) }</div>\n              <br></br>\n              <Card.Content extra>\n                <div >\n                <NavLink to=\"/edit\" exact>\n                  <Button  size='large'  color='green'>\n                    Update Account\n                  </Button>\n                </NavLink>\n                  <Button size=\"large\" color='red' onClick={(e) => this.deleteAccount(e)}>\n                   Delete Account\n                  </Button>\n                </div>\n              </Card.Content>\n\n              {this.state.myTrails.length > 0 ? <h3 className=\"name\">My favorite Trails</h3> : \"\"}\n\n            </div>\n          </div>\n        </div>\n        {this.state.myTrails.map(data =>\n          <div class=\"ui centered card\">\n              <Card\n                image={data.trail_image}\n                header={data.trail_name} />\n            <Button inverted onClick={(e) => this.deleteTrail(e)}> Delete </Button>\n        </div>)}\n      </div>\n    )\n  }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}